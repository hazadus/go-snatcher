// Package tui —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
package tui

import (
	"fmt"

	tea "github.com/charmbracelet/bubbletea"
	"github.com/charmbracelet/lipgloss"
	"github.com/hazadus/go-snatcher/internal/data"
)

// App –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ TUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
type App struct {
	appData *data.AppData
}

// NewApp —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä TUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
func NewApp(appData *data.AppData) *App {
	return &App{
		appData: appData,
	}
}

// Run –∑–∞–ø—É—Å–∫–∞–µ—Ç TUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
func (app *App) Run() error {
	// –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª—å –¥–ª—è Bubble Tea
	model := newMainModel(app.appData)

	// –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É Bubble Tea
	p := tea.NewProgram(model, tea.WithAltScreen())

	// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É
	_, err := p.Run()
	return err
}

// mainModel –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω—É—é –º–æ–¥–µ–ª—å TUI
type mainModel struct {
	appData *data.AppData
}

// newMainModel —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –≥–ª–∞–≤–Ω—É—é –º–æ–¥–µ–ª—å
func newMainModel(appData *data.AppData) *mainModel {
	return &mainModel{
		appData: appData,
	}
}

// Init –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–æ–¥–µ–ª—å
func (m *mainModel) Init() tea.Cmd {
	return nil
}

// Update –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
func (m *mainModel) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
	switch msg := msg.(type) {
	case tea.KeyMsg:
		switch msg.String() {
		case "q", "ctrl+c":
			return m, tea.Quit
		}
	case tea.WindowSizeMsg:
		// –ú–æ–∂–Ω–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞
	}

	return m, nil
}

// View –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
func (m *mainModel) View() string {
	style := lipgloss.NewStyle().
		Bold(true).
		Foreground(lipgloss.Color("#0000ff")).
		Padding(1, 2)

	title := style.Render("üéµ Snatcher TUI")

	content := fmt.Sprintf(
		"%s\n\n"+
			"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Snatcher TUI!\n"+
			"–¢—Ä–µ–∫–æ–≤ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ: %d\n\n"+
			"–ù–∞–∂–º–∏—Ç–µ 'q' –¥–ª—è –≤—ã—Ö–æ–¥–∞",
		title,
		len(m.appData.Tracks),
	)

	return content
}
